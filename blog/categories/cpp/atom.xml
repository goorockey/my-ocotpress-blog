<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[categories: cpp | Goorockey's Blog]]></title>
  <link href="http://www.goorockey.com/blog/categories/cpp/atom.xml" rel="self"/>
  <link href="http://www.goorockey.com/"/>
  <updated>2014-04-29T10:51:03+08:00</updated>
  <id>http://www.goorockey.com/</id>
  <author>
    <name><![CDATA[Goorockey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[STL中用copy和ostream_iterator输出一个数组]]></title>
    <link href="http://www.goorockey.com/blogs/14001"/>
    <updated>2011-08-02T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/14001</id>
    <content type="html"><![CDATA[<pre><code>#include &lt;iostream&gt;
#include &lt;iterator&gt;
#include &lt;algorithm&gt;

int a[] = { 335, 33, 98, 39, 54, 24, 3 };
int nSize = sizeof(a) / sizeof(a[0]);    

// 输出数组a到标准输出，同时每个元素都以空格为结束（最后一个元素后面也会有空格）
std::copy(a, a + nSize, std::ostream_iterator&lt;int&gt;(std::cout, " ")); 
</code></pre>

<p>结果：335 33 98 39 54 24 3</p>

<p>一个字：妙！！(^0^)/ </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不能同时用static和const修饰一个成员函数]]></title>
    <link href="http://www.goorockey.com/blogs/11001"/>
    <updated>2011-08-02T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/11001</id>
    <content type="html"><![CDATA[<p>1.普通的成员函数 </p>

<ul>
  <li>
    <p>编译器会自动为其添加一个<code>this指针</code>作为入参 </p>
  </li>
  <li>
    <p>该成员函数能修改成员变量</p>
  </li>
</ul>

<p>2.在成员函数后面加<code>const</code>(注意是后面！) </p>

<ul>
  <li>
    <p>编译器会自动为其添加一个<code>const *this指针</code>作为入参 </p>
  </li>
  <li>
    <p>该成员函数不能修改成员变量</p>
  </li>
</ul>

<p>3.成员函数加<code>static</code></p>

<ul>
  <li>
    <p>编译器不会加<code>this指针</code></p>
  </li>
  <li>
    <p>该成员函数不能直接访问成员变量，只能访问静态成员变量</p>
  </li>
</ul>

<p>所以在成员函数加<code>static</code>和后面加<code>const</code>是矛盾的，即不能同时这样修饰一个成员函数.</p>
]]></content>
  </entry>
  
</feed>
