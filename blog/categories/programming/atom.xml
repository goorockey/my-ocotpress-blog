<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[categories: programming | Goorockey's Blog]]></title>
  <link href="http://www.goorockey.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://www.goorockey.com/"/>
  <updated>2014-03-06T09:52:01+08:00</updated>
  <id>http://www.goorockey.com/</id>
  <author>
    <name><![CDATA[Goorockey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Web-Harvest抓腾讯微博]]></title>
    <link href="http://www.goorockey.com/blog/2014/03/05/webharvest-4-tweibo/"/>
    <updated>2014-03-05T21:31:00+08:00</updated>
    <id>http://www.goorockey.com/blog/2014/03/05/webharvest-4-tweibo</id>
    <content type="html"><![CDATA[
<p>好久没更新博客，水一文。</p>

<p>前阵子要给别人出试题，偶然发现Web-Harvest(下称WH)这个抓网页的工具，它主要应用xpath和xquery抓网页，内置还定义了一套功能挺多的语法，就出了一道用WH抓微博的题目。</p>

<p>本来想抓新浪微博的，但发现它的微博内容都是js生成的，折腾了一下，还是可以用WH的函数提取出内容，但腾讯微博相对还是简单多了。</p>

<p>题目其中一个内容是用WH抓几页邓紫棋的腾讯微博，排除包含她演唱会广告的和没有图片的微博。</p>

<!-- more -->

<p>其中遇到的坑：</p>

<ul>
  <li>
    <p>因为是包含中文，写入到文件时要用gbk编码</p>
  </li>
  <li>
    <p>在xpath已经用li[@id]获取微博节点，但节点传到xquery里面时竟然还要再一次用li[@id]获取一级</p>
  </li>
</ul>

<p>配置文件如下</p>

<p><div><script src='https://gist.github.com/9368146.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/9368146&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面试趣题]]></title>
    <link href="http://www.goorockey.com/blogs/38007"/>
    <updated>2011-08-24T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/38007</id>
    <content type="html"><![CDATA[<p><strong>题一、有一个整数数组，请求出两两之差绝对值最小的值</strong></p>

<p>方法：先排序，再找差值最小的点对。</p>

<p>效率：时间复杂度O(nlogn)</p>

<hr />

<p><strong>题二、平面上N个点，每两个点都确定一条直线，求出斜率最大的那条直线所通过的两个点（斜率不存在的情况不考虑）</strong></p>

<p>方法：根据x排序，用图解枚举所有情况，能证明斜率最大的两点肯定是相邻的两点。</p>

<p>效率：时间复杂度O(nlogn)</p>

<hr />
<p><strong>题三、一棵排序二叉树，令 f=(最大值+最小值)/2，设计一个算法，找出距离f值最近、大于f值的结点</strong></p>

<p>方法：把f插入，中序排序</p>

<p>效率：时间复杂度O(logn)</p>

<!--more-->

<hr />
<p><strong>题四、找出两个字符串中最大公共子字符串,</strong></p>

<p>如”abccade”,”dgcadde”的最大子串为”cad”</p>

<p><em>方法一：</em></p>

<p>从字符串一中遍历子串，并在字符串二中匹配。时间复杂度为O(n^3)。</p>

<p><em>方法二：</em></p>

<p>矩阵法：用矩阵表示两字符串，横竖字符相同的格置1，则在45度方向连续1最多的就是所求，时间复杂度O(n^2) 。</p>

<hr />
<p><strong>题五、检查单向链表中是否有环</strong></p>

<p>这算是经典的面试题了，记录一下好的解法和推广。</p>

<p><em>方法一：</em></p>

<p>操作：把链表反向，当游标指针回到首节点时表示有环，否则无环。</p>

<p>解释：如果有环，把链表反向后，游标指针会从环内回到环外，最后回到首节点。</p>

<p>效率：时间复杂度O(n)，空间复杂度O(1)。</p>

<p>不足：破坏原链表的结构，需要再遍历一次链表来恢复链表结构。</p>

<p><em>方法二:</em></p>

<p>操作：</p>

<p>两个游标指针,一个慢指针每次移动一个节点，一个快指针每次移动两个节点。如果在快指针遍历到链表结尾前遇到慢指针，则链表有环，否则无环。</p>

<p>解释：</p>

<p>如果有环，当慢指针刚进入环时，设快指针与慢指针的距离为n（距离指慢指针不动是，快指针要经过几次节点达到慢指针），由于快指针每次都追上慢指针一个节点，则两者经过n次后总会相遇。</p>

<p>效率：时间复杂度O(n)， 空间复杂度O(1)。</p>

<p><em>代码：</em></p>

<p><div><script src='https://gist.github.com/3712175.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/3712175&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

<hr />
<p><strong>推广一：有环单向链表中环的节点数</strong></p>

<p>操作：</p>

<p>还是用快慢指针，当快慢指针在环内相遇后，两指针继续移动，并对慢指针移动的节点计数。当两指针再次相遇时，计数的结果就是环的节点数。</p>

<p>解释：</p>

<p>还是题一中的思想。设环的节点数为n，当两指针第一次相遇时，可看做两指针的距离为n，则再慢指针再经过n个节点后，两指针会再次相遇，所以慢指针移动的节点数就是环的节点数。</p>

<p><em>代码：</em></p>

<p><div><script src='https://gist.github.com/3712217.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/3712217&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

<hr />
<p><strong>推广二、找到有环单向链表中环首节点</strong></p>

<p>如以下有环单向链表：</p>

<p>1=&gt;2=&gt;3=&gt;4=&gt;5=&gt;6=&gt;7=&gt;9=&gt;4</p>

<p>即第9节点的next指针指向第4节点，则环的首节点为第4节点</p>

<p>操作：</p>

<ol>
  <li>先计算环的节点数n。</li>
  <li>两个前后指针，前指针先移动n个节点，然后两指针一齐移动，每次都只移动一个的节点。</li>
  <li>当两指针相遇时，两指针指向的节点就是所求的环首节点。</li>
</ol>

<p>解释：因为开始两指针相距n个节点，当后指针刚进入环时，肯定会与前指针在环的首节点相遇。</p>

<hr />
<p><strong>推广三、破坏有环单向链表的环</strong></p>

<p>操作：</p>

<p>在上面的基础上，当找到了环首节点和环内节点数n后，只要从环首节点移动n到达环的尾节点，修改环尾节点的next指针即可。</p>

<p><em>代码：</em></p>

<p><div><script src='https://gist.github.com/3712226.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/3712226&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

<hr />
<p><strong>题五、找到有序链表的中位值</strong></p>

<p>常规方法：遍历一次链表得到链表长度length，再遍历一次链表到length/2的位置即为中位值</p>

<p>更好的方法：用两个指针p1、p2，p1每次走两步，p2每次走一步，等到p1到链表尾时，p2所指即为中位值</p>

<p><div><script src='https://gist.github.com/3824662.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/3824662&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不用除法运算符实现除法及其推广]]></title>
    <link href="http://www.goorockey.com/blogs/28004"/>
    <updated>2011-08-22T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/28004</id>
    <content type="html"><![CDATA[<p>两个正整数x、y，x是y的倍数，不用除法运算符实现x / y。</p>

<p>1、最简单的方法</p>

<p>循环用x减y，知道x等于0。
&lt;div id="codeSnippetWrapper" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; width: 97.5%; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; cursor: text; border: silver 1px solid; padding: 4px;"&gt;
&lt;div id="codeSnippet" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 1:</span> <span style="color: #0000ff;">int</span> Div( <span style="color: #0000ff;">int</span> x, <span style="color: #0000ff;">int</span> y )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 2:</span> {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 3:</span>     <span style="color: #0000ff;">int</span> result = 0;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 4:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 5:</span>     <span style="color: #0000ff;">while</span> ( x &gt; y )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 6:</span>     {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 7:</span>         x -= y;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 8:</span>         result++;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 9:</span>     }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 10:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 11:</span>     <span style="color: #0000ff;">return</span> result;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 12:</span> }
 </p>

<p>&lt;/div&gt;
&lt;/div&gt;
时间复杂度O(n)<!--more--></p>

<p>2、用移位实现</p>

<p>与很多优化算法相似，用2次幂实现加速。</p>

<p>考虑到x是y的倍数，设x = y * k</p>

<p>因为我们可以用二进制表示任意整数，所以任意整数都可表示成2次幂的和，即：</p>
<blockquote>k = 2^t1 + 2^t2 + …. + 2^tn;</blockquote>
<p>所以有x = y * (2^t1 + 2^t2 + … + 2^tn)，即我们要的结果就是2^t1 + 2^t2 + … + 2^tn</p>

<p>由此，我们可以先找到一个刚好不大于x的s1 = y<em>(2^t1)，即有y</em>2^t1 &lt;= x &lt; y*2^(t1+1)，</p>

<p>然后令x2 = x - s1 = y * (2^t2 + … + 2^tn)，从而继续递归直到xn – sn = 0。
&lt;div id="codeSnippetWrapper"&gt;
&lt;div id="codeSnippet" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 1:</span> <span style="color: #0000ff;">int</span> Div( <span style="color: #0000ff;">int</span> x, <span style="color: #0000ff;">int</span> y )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 2:</span> {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 3:</span>     <span style="color: #0000ff;">int</span> i = 1;          <span style="color: #008000;">// 2次幂计数器</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 4:</span>     <span style="color: #0000ff;">int</span> product = y;    <span style="color: #008000;">// 中间乘积，等于y*2^t，即product = y * i</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 5:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 6:</span>     <span style="color: #008000;">// 找到刚好不大于x的product = y<em>i满足y</em>i &lt;= x &lt; y*(i+1)</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 7:</span>     <span style="color: #0000ff;">while</span> ( product &lt;&lt; 1 &lt;= x )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 8:</span>     {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 9:</span>         i  &lt;&lt;= 1;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 10:</span>         product &lt;&lt;= 1;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 11:</span>     }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 14:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 15:</span>     <span style="color: #008000;">// 递归得到结果</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 16:</span>     <span style="color: #0000ff;">int</span> result = 0;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 17:</span>     <span style="color: #0000ff;">for</span> ( ; x &gt; 0; i &gt;&gt;= 1, product &gt;&gt;= 1 )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 18:</span>     {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 19:</span>         <span style="color: #008000;">// product自除2来寻找新的product，满足刚好不大于x</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 20:</span>         <span style="color: #0000ff;">if</span> ( x &gt;= product )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 21:</span>         {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 22:</span>             result += i;     <span style="color: #008000;">// 累加结果result = 2^t1 + 2^t2 … + 2^t(k-1)</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 23:</span>             x -= product;    <span style="color: #008000;">// 相减得到新的x = y*(2^tk + … + 2^tn)</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 24:</span>         }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 25:</span>     }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 26:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 27:</span>     <span style="color: #0000ff;">return</span> result;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 28:</span> }
 </p>

<p>&lt;/div&gt;
&lt;/div&gt;
时间复杂度O(logn)</p>

<p>3、推广 - 不用开方运算符求幂数：</p>

<p>两个正整数x、y，不用开方运算符求x是y的几次幂。</p>

<p>思想与方法二类似。
&lt;div id="codeSnippetWrapper"&gt;
&lt;div id="codeSnippet" style="text-align: left; line-height: 12pt; background-color: #f4f4f4; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 1:</span> <span style="color: #cc6633;">#include</span> <span style="color: #006080;">“math.h”</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 2:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 3:</span> <span style="color: #0000ff;">int</span> Extract( <span style="color: #0000ff;">int</span> x, <span style="color: #0000ff;">int</span> y )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 4:</span> {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 5:</span>     <span style="color: #0000ff;">int</span> i = 1, power = y;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 6:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 7:</span>     <span style="color: #0000ff;">while</span> ( power * power &lt;= x )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 8:</span>     {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 9:</span>         i &lt;&lt;= 1;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 10:</span>         power *= power;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 11:</span>     }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 12:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 13:</span>     <span style="color: #0000ff;">int</span> result = 0;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 14:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 15:</span>     <span style="color: #0000ff;">for</span> ( ; x &gt; 1; i &gt;&gt;= 1, power /= pow( y, i ))
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 16:</span>     {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 17:</span>         <span style="color: #0000ff;">if</span> ( x &gt;= power )
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 18:</span>         {
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 19:</span>             x /= power;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 20:</span>             result += i;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 21:</span>         }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 22:</span>     }
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 23:</span>
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: #f4f4f4; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 24:</span>     <span style="color: #0000ff;">return</span> result;
 
&lt;pre style="text-align: left; line-height: 12pt; background-color: white; margin: 0em; width: 100%; font-family: 'Courier New', courier, monospace; direction: ltr; color: black; font-size: 8pt; overflow: visible; border-style: none; padding: 0px;"&gt;<span style="color: #606060;"> 25:</span> }
 </p>

<p>&lt;/div&gt;
&lt;/div&gt;</p>
<div>时间复杂度O(logn)</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自产生程序]]></title>
    <link href="http://www.goorockey.com/blogs/20001"/>
    <updated>2011-08-08T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/20001</id>
    <content type="html"><![CDATA[<blockquote>   <p>自产生程序：不通过任何输入，输出自己代码的程序。</p> </blockquote>
<p />
<p>很多语言都可以写出这样的程序。</p>
<blockquote>   <p>C版本(只有一行)：</p>    <p>char s[] = "char s[] = %c%s%c;int main(){ printf(s, 34, s, 34);return 0;}";int main(){ printf(s, 34, s, 34);return 0;}</p> </blockquote>
<p />
<p>虽然是写出来了，但里面还是有很多值得研究的东西的。</p>
<p />
<p>参考资料：</p>
<p><a href="http://www.nyx.net/~gthompso/quine.htm">http://www.nyx.net/~gthompso/quine.htm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小记：不用第三个变量交换两数]]></title>
    <link href="http://www.goorockey.com/blogs/18001"/>
    <updated>2011-08-06T00:00:00+08:00</updated>
    <id>http://www.goorockey.com/blogs/18001</id>
    <content type="html"><![CDATA[<p>经典的解法：</p>
<blockquote>   <p>a += b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // a变成a+b</p>    <p>b = a – b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // b变成原来的a，因为a+b-b = a</p>    <p>a –= b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // a变成原来的b，因为a+b-a = b</p>    <p />    <p>存在的问题： </p>    <p>&nbsp;&nbsp; a+b太大的话会溢出</p> </blockquote>
<p />
<blockquote>   <p>a ^= b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // a变成a^b</p>    <p>b ^= a;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // b变成原来的a，因为b^(a^b) = a</p>    <p>a ^= b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // a变成原来的b，因为a^(a^b) = b</p>    <p>存在的问题：</p>    <p>&nbsp; a、b的值不能超过对方的位数所能表达的范围.</p>    <p>&nbsp; 如：</p>    <p>&nbsp;&nbsp; int a = 0x10101010;&nbsp; // 设此时int为4个字节</p>    <p>&nbsp;&nbsp; short b = 0x15;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>    <p>&nbsp;&nbsp; 就会出问题。</p> </blockquote>
<p />
<p>这个问题已经老生常谈了，不过今天还是遇到一个问题：</p>
<blockquote>   <p>当两个要交换的数其实是同一个变量（更准确的说是同一个内存）时两种解法都会出错，变量被置0。原因自己推算即可得出。</p> </blockquote>
<p />
<p>所以，我觉得更为保险的方法就是在交换之前先判断a、b是否相等，就既提高效率又防止出错。</p>
]]></content>
  </entry>
  
</feed>
